% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dates_and_times.R
\name{convert_datetime_format}
\alias{convert_datetime_format}
\title{Convert EML date/time format string to one that R can parse}
\usage{
convert_datetime_format(eml_format_string, convert_z = FALSE)
}
\arguments{
\item{eml_format_string}{A character vector of EML date/time format strings. This function understands the following codes: YYYY = four digit year, YY = two digit year, MMM = three letter month abbrev., MM = two digit month, DD = two digit day, hh or HH = 24 hour time, mm = minutes, ss or SS = seconds, +/-hhhh or +/-HHHH = UTC offset.}

\item{convert_z}{Should a "Z" at the end of the format string (indicating UTC) be replaced by a "\%z"? Only set to \code{TRUE} if you plan to use \code{fix_utc_offset} to change "Z" in datetime strings to "+0000".}
}
\value{
A character vector of date/time format strings that can be parsed by \code{readr} or \code{strptime}.
}
\description{
Convert EML date/time format string to one that R can parse
}
\details{
\code{convert_datetime_format()} is not a sophisticated function. If the EML format string is not valid, it will happily and without complaint return an R format string that will break your code. You have been warned.  Note that UTC offset formats using a colon or only two digits will be parsed by this function, but if parsing datetime values from strings, you will also need to use \code{fix_utc_offset} to change the UTC offsets to the +/-hhhh format that R can read.
}
\examples{
convert_datetime_format("MM/DD/YYYY")
convert_datetime_format(c("MM/DD/YYYY", "YY-MM-DD"))

}
